{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cat-information/cat-information.component.html","webpack:///./src/app/cat-information/cat-information.component.ts","webpack:///./src/app/rest.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\n<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'agl-developer-test-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { CatInformationComponent } from './cat-information/cat-information.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'cat-information',\n    component: CatInformationComponent,\n    data: { title: 'Cat Information' }\n  },\n  { path: '',\n    redirectTo: '/cat-information',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CatInformationComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\n<b>Male</b>\n<ul>\n  <li *ngFor=\"let p of catsWithMaleOwners; let i=index;\">\n    <h3>{{p}}\n    </h3>\n\n  </li>\n</ul>\n\n<b>Female</b>\n<ul>\n  <li *ngFor=\"let j of catsWithFemaleOwners; let i=index;\">\n    <h3>{{j}}\n    </h3>\n\n  </li>\n</ul>","import { Component, OnInit } from '@angular/core';\nimport { RestService } from '../rest.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cat-information',\n  templateUrl: './cat-information.component.html',\n  styleUrls: ['./cat-information.component.css']\n})\nexport class CatInformationComponent implements OnInit {\n\n  petsData:any = [];\n  catsWithMaleOwners: any = [];\n  catsWithFemaleOwners: any= [];\n  maleOwners:any = [];\n  femaleOwners:any = [];\n\nprivate data: any;\n  constructor(public rest:RestService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.getCatInformation();\n  }\n\n  getCatInformation() {\n    this.petsData = [];\n    this.maleOwners = [];\n    this.femaleOwners = [];\n\n    this.catsWithMaleOwners = [];\n    this.catsWithFemaleOwners = [];\n\n    this.rest.getCatInformation().subscribe((data: {}) => {\n     \n      this.petsData = data;\n\n      console.log(data);\n \n     // this.maleOwners = this.petsData.filter(x => x.gender == 'Male');\n     // this.femaleOwners = this.petsData.filter(x => x.gender == 'Female');\n      \nthis.petsData.forEach(pet => {\n  if(pet.gender){\n  if(pet.gender == 'Male'){\n    this.maleOwners.push(pet);\n  }\n  else{\n    this.femaleOwners.push(pet);\n  }\n}\n});\n\n      this.maleOwners.forEach(element => {\n        if(element.pets){\n          const cats = element.pets.filter(y=>y.type=='Cat')\n           cats.forEach(element => {\n            this.catsWithMaleOwners.push(element.name);\n           });\n        }\n});\n\nthis.femaleOwners.forEach(element => {\n  if(element.pets){\n    const cats = element.pets.filter(y=>y.type=='Cat')\n     cats.forEach(element => {\n      this.catsWithFemaleOwners.push(element.name);\n     });\n  }\n});\nconsole.log(this.catsWithMaleOwners.sort());\nconsole.log(this.catsWithFemaleOwners.sort());\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\n\nconst endpoint = 'http://agl-developer-test.azurewebsites.net/people.json';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })\n};\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestService {\n\n  constructor(private http: HttpClient) {}\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  getCatInformation(): Observable<any> {\n    return this.http.get(endpoint).pipe(\n      map(this.extractData));\n  }\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}